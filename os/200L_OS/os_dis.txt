
os.elf:     file format elf32-i386
os.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00007c00

Program Header:
    LOAD off    0x00000000 vaddr 0x00007000 paddr 0x00006000 align 2**12
         filesz 0x000000f4 memsz 0x000000f4 flags r--
    LOAD off    0x00000c00 vaddr 0x00007c00 paddr 0x00007c00 align 2**12
         filesz 0x00000200 memsz 0x00000200 flags r-x
    LOAD off    0x000010f4 vaddr 0x080480f4 paddr 0x080480f4 align 2**12
         filesz 0x00000028 memsz 0x00000028 flags r--
    NOTE off    0x000010f4 vaddr 0x080480f4 paddr 0x080480f4 align 2**2
         filesz 0x00000028 memsz 0x00000028 flags r--
0x6474e553 off    0x000010f4 vaddr 0x080480f4 paddr 0x080480f4 align 2**2
         filesz 0x00000028 memsz 0x00000028 flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .note.gnu.property 00000028  080480f4  080480f4  000010f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000200  00007c00  00007c00  00000c00  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000001b  00000000  00000000  0000111c  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  00001138  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  4 .debug_info   00000025  00000000  00000000  00001158  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00000014  00000000  00000000  0000117d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_line   0000004f  00000000  00000000  00001191  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_str    00000094  00000000  00000000  000011e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line_str 00000032  00000000  00000000  00001274  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 start.o
00007c00 l       .text	00000000 _data
00007c05 l       .text	00000000 offset
00000000 l    df *ABS*	00000000 os.c
00007c00 g       .text	00000000 _start
00008000 g       .text	00000000 __bss_start
00008000 g       .text	00000000 _edata
00008000 g       .text	00000000 _end



Disassembly of section .text:

00007c00 <_start>:

	.code16

	.text
_start:
	jmp $0, $offset
    7c00:	ea                   	.byte 0xea
    7c01:	05                   	.byte 0x5
    7c02:	7c 00                	jl     7c04 <_start+0x4>
	...

00007c05 <offset>:

offset:
	mov $0, %ax
    7c05:	b8 00 00 8e d8       	mov    $0xd88e0000,%eax
	mov %ax, %ds
	mov %ax, %es
    7c0a:	8e c0                	mov    %eax,%es
	mov %ax, %ss
    7c0c:	8e d0                	mov    %eax,%ss
	mov %ax, %gs
    7c0e:	8e e8                	mov    %eax,%gs
	mov %ax, %fs
    7c10:	8e e0                	mov    %eax,%fs

	jmp .
    7c12:	eb fe                	jmp    7c12 <offset+0xd>
	...
    7dfc:	00 00                	add    %al,(%eax)
    7dfe:	55                   	push   %ebp
    7dff:	aa                   	stos   %al,%es:(%edi)
